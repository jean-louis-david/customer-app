apply plugin: 'com.android.application'
//apply plugin: 'io.fabric'


android {
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    flavorDimensions "default"
    aaptOptions {
        cruncherEnabled = false
    }
    signingConfigs {
        config {
            keyAlias 'cubetaxipluse'
            keyPassword '123456'
            storeFile file('keystore.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion 23
    buildToolsVersion '27.0.3'
    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        applicationId "com.app85taxi.passenger"
        minSdkVersion 17
        targetSdkVersion 23
        versionCode 1
        versionName "1"


        multiDexEnabled true
    }
    dexOptions {
        jumboMode true
    }
    productFlavors {
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 17
        }
        prod {
            // The actual minSdkVersion for the application.
            minSdkVersion 17
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        release {
//            shrinkResources false
//            minifyEnabled false
//            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    packagingOptions {
        exclude 'lib/arm64-v8a/libcardioDecider.so'
        exclude 'lib/arm64-v8a/libcardioRecognizer.so'
        exclude 'lib/arm64-v8a/libcardioRecognizer_tegra2.so'
        exclude 'lib/arm64-v8a/libopencv_core.so'
        exclude 'lib/arm64-v8a/libopencv_imgproc.so'
        exclude 'lib/armeabi/libcardioDecider.so'
        exclude 'lib/armeabi-v7a/libcardioDecider.so'
        exclude 'lib/armeabi-v7a/libcardioRecognizer.so'
        exclude 'lib/armeabi-v7a/libcardioRecognizer_tegra2.so'
        exclude 'lib/armeabi-v7a/libopencv_core.so'
        exclude 'lib/armeabi-v7a/libopencv_imgproc.so'
        exclude 'lib/mips/libcardioDecider.so'
        exclude 'lib/x86/libcardioDecider.so'
        exclude 'lib/x86/libcardioRecognizer.so'
        exclude 'lib/x86/libcardioRecognizer_tegra2.so'
        exclude 'lib/x86/libopencv_core.so'
        exclude 'lib/x86/libopencv_imgproc.so'
        exclude 'lib/x86_64/libcardioDecider.so'
        exclude 'lib/x86_64/libcardioRecognizer.so'
        exclude 'lib/x86_64/libcardioRecognizer_tegra2.so'
        exclude 'lib/x86_64/libopencv_core.so'
        exclude 'lib/x86_64/libopencv_imgproc.so'


        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
        // as noted by @Vishnuvathsan you may also need to include
        // variations on the file name. It depends on your dependencies.
        // Some other common variations on notice and license file names
        exclude 'META-INF/notice'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'


    }
}
repositories {
    mavenCentral()

    maven {
        url "https://mint.splunk.com/gradle/"
    }

     //   maven { url "https://maven.fabric.io/public" }
    /* maven {
        url "https://jitpack.io"
    }*/
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    //    compile 'com.android.support:appcompat-v7:23.4.0'

    //    compile 'com.android.support:multidex:1.0.0'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.android.support:cardview-v7:23.4.0'
    compile 'com.android.support:recyclerview-v7:23.4.0'
    compile 'com.google.android.gms:play-services-gcm:9.4.0'
    compile 'com.google.android.gms:play-services-location:9.4.0'
    compile 'com.google.android.gms:play-services-maps:9.4.0'
    compile 'com.google.android.gms:play-services-places:9.4.0'
    compile 'com.google.android.gms:play-services-auth:9.4.0'
    compile 'com.facebook.android:facebook-android-sdk:4.12.1'
    //    compile 'com.paypal.sdk:paypal-android-sdk:2.13.3'
    compile 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'
//    compile 'com.wdullaer:materialdatetimepicker:2.2.0'
    compile 'com.splunk.mint:mint:5.0.0'
    compile 'com.android.support:support-v4:23.4.0'
//    compile 'com.android.support:support-annotations:23.4.0'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.stripe:stripe-android:2.1.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    //java.lang.IllegalArgumentException: out == null
    compile 'com.squareup.okio:okio:1.6.0'
   // compile 'com.pubnub:pubnub:4.0.14'
    compile group: 'com.pubnub', name: 'pubnub-gson', version: '4.6.4'
    compile 'com.google.firebase:firebase-messaging:9.4.0'
    compile('com.twitter.sdk.android:twitter:3.0.0@aar') {
        transitive = true;
    }
    apply plugin: 'com.google.gms.google-services'
    compile 'com.skyfishjy.ripplebackground:library:1.0.1'
    compile 'com.firebase:firebase-client-android:2.4.1+'
    compile 'com.google.firebase:firebase-database:9.4.0'
    compile 'com.firebaseui:firebase-ui:0.4.4'
    compile 'com.google.firebase:firebase-core:9.4.0'
    compile 'com.google.firebase:firebase-messaging:9.4.0'
}
apply plugin: 'com.google.gms.google-services'
